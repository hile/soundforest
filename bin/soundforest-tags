#!/usr/bin/env python
"""
File embedded processing for soundforest
"""

import os

from systematic.shell import normalized, Script, ScriptError

from soundforest.metadata import MetaData
from soundforest.tags import TagError
from soundforest.tags.formats import Tags
from soundforest.tags.xml import XMLTags
from soundforest.database.models import SoundForestDB

script = Script()
script.add_argument('--xml', action='store_true', help='Output XML')
script.add_argument('paths', nargs='*', help='Paths to process')
args = script.parse_args()

metadata = MetaData()
db = SoundForestDB()

for arg in args.paths:
    m = metadata.match(arg)
    if m:
        script.log.debug('Skip %s file %s' % (m, arg))
        continue
    try:
        arg = normalized(os.path.realpath(arg))
        tree = db.match_tree(arg)
        if tree is None:
            raise ValueError
        dbfile = tree[arg]
    except ValueError:
        script.log.debug('No matching tree and file found')
        continue
    try:
        xml = XMLTags()
        file_tags = Tags(arg)
    except TagError, emsg:
        script.log.debug(emsg)
        continue

    tags = dict((k, ' '.join(v)) for k, v in file_tags.items())
    dbfile.tags.update_tags(tags)
    if args.xml:
        xml.update({'path': arg})
        xml.update(tags)
        print xml.toxml()
    else:
        for k, v in dbfile.tags.items():
            print '%16s %s' % (k, v)



