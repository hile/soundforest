#!/usr/bin/env python
"""
Script to manipulate soundforest registered codecs and codec commands
"""

from systematic.shell import Script,ScriptError
from soundforest.codecs import CodecDB,CodecError

script = Script()
script.add_option('-l','--list-codecs',action='store_true',help='List codecs and extensions')
script.add_option('-c','--list-commands',action='store_true',help='List codec commands')
script.add_option('-r','--register',action='store_true',help='Register codec')
script.add_option('-u','--unregister',action='store_true',help='Unregister codec')
script.add_option('-e','--register-extensions',help='Register codec extensions')

(opts,args,codecs) = (None,None,None)
try:
    (opts,args) = script.parse_args()
except ScriptError,emsg:
    script.exit(1,emsg)

try:
    codecs = CodecDB()
except CodecError,emsg:
    script.exit(1,emsg)

if opts.register:
    if len(args)!=2:
        script.exit(1,'Registering codec requires name and description as arguments')
    try:
        codecs.register_codec(name=args[0],description=args[1])
    except CodecError,emsg:
        script.exit(1,emsg)

if opts.unregister:
    if len(args)!=1:
        script.exit(1,'Registering codec requires name as argument')
    try:
        codecs.unregister_codec(name=args[0])
    except CodecError,emsg:
        script.exit(1,emsg)

if opts.register_extensions:
    try:
        codec = codecs.get_codec(opts.register_extensions)
        for ext in args:
            try:
                codec.register_extension(ext)
            except CodecError,emsg:
                script.exit(1,emsg)
    except CodecError,emsg:
        script.exit(1,emsg)


if opts.list_codecs:
    for codec in codecs.registered_codecs():
        print '%-8s %s' % (codec.name,','.join(codec.extensions))

if opts.list_commands:
    print
    for codec in codecs.registered_codecs():
        if args and codec.name not in args:
            continue
        print 'Codec %s: %s' % (codec.name,codec.description)
        if not len(codec.encoders) and not len(codec.decoders):
            print '  No commands registered'
        for encoder in codec.encoders:
            print '  Encoder: %s ' % encoder
        for encoder in codec.decoders:
            print '  Decoder: %s' % encoder
        print
