#!/usr/bin/env python
"""
Script to lookup files by name from a tree 
"""

import re,os

from systematic.shell import Script,ScriptError
from soundforest.database.models import SoundForestDB

RE_TRACKNUMBER = re.compile('^(?P<tracknumber>[0-9]+) (?P<filename>(.*))$')

DEFAULT_TREE = '/music/m4a'
DEFAULT_TREE_TYPE = 'Songs'

USAGE = """Usage: %(script)s [options] <names>

Lookup files by name from library database."""
script = Script()
script.set_usage(USAGE % {'script': script.name})
script.add_option('-T','--tree',help='Search files from this tree')
script.set_defaults(**{'tree': DEFAULT_TREE})
(opts,args) = (None,None)
try:
    (opts,args) = script.parse_args()
except ScriptError,emsg:
    script.exit(1,emsg)

if not args or not opts.tree:
    script.exit(1,script.get_usage())

adb = SoundForestDB()
tree = adb.match_tree(opts.tree)

names = []
for arg in args:
    arg = unicode(arg,'utf-8')
    if os.path.isfile(arg):
        names.append(arg)
    if os.path.isdir(arg):
        names.extend([os.path.join(arg,x) for x in os.listdir(arg)])

for name in names:
    m = RE_TRACKNUMBER.match(os.path.basename(name))
    if m:
        name = m.groupdict()['filename']
    matches = tree.match(name)
    for p in tree.match(name):
        print p.realpath

